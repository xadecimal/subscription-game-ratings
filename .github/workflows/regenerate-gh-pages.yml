# Workflow for regenerating static site with lists of subscription services games to GitHub Pages
name: Generate and Deploy to GitHub Pages

on:
  # Runs at 15:40 every Monday
  schedule:
    - cron: '40 15 * * 1'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job, will generate static site
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 20
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: latest # Clojure CLI based on tools.deps
          bb: latest # Babashka
      - name: Cache clojure dependencies for faster consecutive executions
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      - name: Generate static site
        run: clojure -M ./src/com/xadecimal/subscription_game_ratings.clj
        env:
          IGDB_CLIENT_SECRET: ${{ secrets.IGDB_CLIENT_SECRET }}
      - name: Upload Clojure error logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: clojure-error.edn
          path: /tmp/clojure-*.edn
          retention-days: 6
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./resources/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
